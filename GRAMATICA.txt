Terminales = {CADENA, ENTERO, DECIMAL, CHAR, ID_VARIABLE,
              TRUE, FALSE,
              IMPRIMIR, TYPE_INT, TYPE_DOUBLE, TYPE_CHAR, TYPE_STRING, TYPE_BOOLEAN,
              MAS, MENOS, MULT, DIV, POTENCIA, MODULO, INCREMENTO, DECREMENTO,
              PAR1, PAR2, LLAV1, LLAV2, DEFAULT_MATCH,
              UMENOS,
              IGUAL, IGUAL_IGUAL, DIFERENTE_DE, MENOR_QUE, MENOR_IGUAL, MAYOR_QUE, MAYOR_IGUAL,
              OR, AND, XOR, NOT, FLECHA,
              DOSPUNTOS, FINCADENA,
              BREAK,
              CONST, VAR, IF, ELSE, MATCH, FOR, WHILE, DO, CONTINUE}

No Terminales = {<INICIO>, <INSTRUCCIONES>, <CASES>, <CASE>, <INSTRUCCION>,
                 <IMPRESION>, <DECLARACION>, <ASIGNACION>, <SIF>, <SMATCH>,
                 <CFOR>, <ACTUALIZA_FOR>, <CWHILE>, <CDO_WHILE>, <SALIDA>,
                 <CONTINIU>, <TIPOS>, <MUTABILIDAD>, <EXPRESION>}


simbolo inicial = <INICIO>

<INICIO> ::= <INSTRUCCIONES>

<INSTRUCCIONES> ::= <INSTRUCCIONES> <INSTRUCCION>
                  | <INSTRUCCION>

<INSTRUCCION> ::= <IMPRESION>
                | <DECLARACION>
                | <ASIGNACION>
                | <SIF>
                | <CFOR>
                | <CWHILE>
                | <CDO_WHILE>
                | <SALIDA>
                | <CONTINIU>
                | <SMATCH>
                | error FINCADENA
                | error

<IMPRESION> ::= IMPRIMIR PAR1 <EXPRESION> PAR2 FINCADENA

<DECLARACION> ::= <MUTABILIDAD> ID_VARIABLE DOSPUNTOS <TIPOS> IGUAL <EXPRESION> FINCADENA
                | <MUTABILIDAD> ID_VARIABLE DOSPUNTOS <TIPOS> FINCADENA

<MUTABILIDAD> ::= VAR
                | CONST

<ASIGNACION> ::= ID_VARIABLE IGUAL <EXPRESION> FINCADENA
               | ID_VARIABLE INCREMENTO FINCADENA
               | ID_VARIABLE DECREMENTO FINCADENA

<TIPOS> ::= TYPE_INT
          | TYPE_DOUBLE
          | TYPE_STRING
          | TYPE_CHAR
          | TYPE_BOOLEAN

<SIF> ::= IF PAR1 <EXPRESION> PAR2 LLAV1 <INSTRUCCIONES> LLAV2
        | IF PAR1 <EXPRESION> PAR2 LLAV1 <INSTRUCCIONES> LLAV2 ELSE LLAV1 <INSTRUCCIONES> LLAV2
        | IF PAR1 <EXPRESION> PAR2 LLAV1 <INSTRUCCIONES> LLAV2 ELSE <SIF>

<SMATCH> ::= MATCH <EXPRESION> LLAV1 <CASES> LLAV2

<CASES> ::= <CASES> <CASE>
          | <CASE>

<CASE> ::= <EXPRESION> FLECHA LLAV1 <INSTRUCCIONES> LLAV2
         | DEFAULT_MATCH FLECHA LLAV1 <INSTRUCCIONES> LLAV2

<CFOR> ::= FOR PAR1 <ASIGNACION> <EXPRESION> FINCADENA <ACTUALIZA_FOR> PAR2 LLAV1 <INSTRUCCIONES> LLAV2

<ACTUALIZA_FOR> ::= ID_VARIABLE IGUAL <EXPRESION>
                  | ID_VARIABLE INCREMENTO
                  | ID_VARIABLE DECREMENTO

<SALIDA> ::= BREAK FINCADENA

<CONTINIU> ::= CONTINUE FINCADENA

<CWHILE> ::= WHILE PAR1 <EXPRESION> PAR2 LLAV1 <INSTRUCCIONES> LLAV2

<CDO_WHILE> ::= DO LLAV1 <INSTRUCCIONES> LLAV2 WHILE PAR1 <EXPRESION> PAR2 FINCADENA

<EXPRESION> ::= MENOS <EXPRESION> %prec UMENOS
              | <EXPRESION> MAS <EXPRESION>
              | <EXPRESION> MENOS <EXPRESION>
              | <EXPRESION> MODULO <EXPRESION>
              | <EXPRESION> MULT <EXPRESION>
              | <EXPRESION> DIV <EXPRESION>
              | <EXPRESION> POTENCIA <EXPRESION>
              | <EXPRESION> IGUAL_IGUAL <EXPRESION>
              | <EXPRESION> DIFERENTE_DE <EXPRESION>
              | <EXPRESION> MENOR_QUE <EXPRESION>
              | <EXPRESION> MENOR_IGUAL <EXPRESION>
              | <EXPRESION> MAYOR_QUE <EXPRESION>
              | <EXPRESION> MAYOR_IGUAL <EXPRESION>
              | <EXPRESION> OR <EXPRESION>
              | <EXPRESION> AND <EXPRESION>
              | <EXPRESION> XOR <EXPRESION>
              | NOT <EXPRESION>
              | PAR1 <EXPRESION> PAR2
              | PAR1 TYPE_INT PAR2 <EXPRESION>
              | PAR1 TYPE_DOUBLE PAR2 <EXPRESION>
              | PAR1 TYPE_CHAR PAR2 <EXPRESION>
              | ENTERO
              | DECIMAL
              | CADENA
              | TRUE
              | FALSE
              | CHAR
              | ID_VARIABLE
